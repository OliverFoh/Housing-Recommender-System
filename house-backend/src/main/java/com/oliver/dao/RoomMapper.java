package com.oliver.dao;

import com.fasterxml.jackson.annotation.JsonView;
import com.oliver.pojo.Room;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.springframework.stereotype.Repository;

import java.util.List;
@Mapper
@Repository
public interface RoomMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house..room
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house..room
     *
     * @mbggenerated
     */
    int insert(Room record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house..room
     *
     * @mbggenerated
     */
    Room selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house..room
     *
     * @mbggenerated
     */
    List<Room> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house..room
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(Room record);


    /**
     *
     * 根据id来查询相应房源信息
     * @param id
     * @return
     */
    @Select("select * from room where id=#{id}")
    Room selectById(@Param("id") String id);

    @Select("select title,city,district,community,pic_url from room where city=#{city}")
    List<Room> selectByCity(@Param("city")String city);

    @Select("SELECT * FROM room ORDER BY RAND() LIMIT #{count}")
    List<Room> getRandomRoom(@Param("count")int count);

    //@Select("select * from room  where city=#{city} and if(#{rentalMethod}='',0=0,rental_method=#{rentalMethod}) if(#{sortType}='',0=0,order by price #{sortType})")
    List<Room> getRoomByConditions(String city,String rentalMethod,String decorateType,String houseType,String ori,String sortType);

    List<Room> batchSelect(List<String> roomIdList);

    @Select("SELECT id,title,city,district,road,community,price,ori,room_type,house_type,rental_method,pic_url FROM room WHERE LOCATE(#{queryString},CONCAT(city,district,road,community))>0 or LOCATE(#{queryString},title)>0")
    List<Room> searchRoomByQueryString(String queryString);
}